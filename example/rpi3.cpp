#include <iostream>
#include <csignal>
#include <unistd.h>

#include "LEDStripController.h"
#include "LEDStripControllerRpi3.h"

#define LED_COUNT   74

volatile sig_atomic_t keep_running = 1;

void signal_handler(int signal) {
    keep_running = 0;
}

int main()
{
    LEDStripController* controller;
    controller = new LEDStripControllerRpi3(LED_COUNT);

    // Create an array of uint32_t with each element set to 0xFF0F00
    uint32_t colorArray[LED_COUNT];

    // Initialize the array with the desired color
    for (int i = 0; i < LED_COUNT; ++i) {
        colorArray[i] = 0xFF0F00;
    }

    controller->init();
    controller->led_array_clear();
    
    // Register signal handler for Ctrl + C
    // SIGINT generated by Ctrl + C
    std::signal(SIGINT, signal_handler);

    while (keep_running) {
        controller->led_array_setColor(colorArray);
        controller->render();
        usleep(1000000 / 15); // 15 frames per second
    }

    std::cout << "Exiting program." << std::endl;
    return 0;
    
    
    
    
    
    //controller->clear();
    //controller->render();

}
